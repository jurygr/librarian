{"version":3,"sources":["image/no-image-icon-23500.jpg","components/Navbar.js","pages/Books.js","components/BookCard.js","pages/Home.js","pages/Error.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","to","style","fontSize","Component","Books","props","useState","book","setBook","useEffect","axios","get","match","params","id","then","data","console","log","catch","err","error","undefined","length","Spinner","width","height","volumeInfo","title","padding","float","src","imageLinks","DefaultImage","thumbnail","alt","publisher","authors","locale","format","publishedDate","description","categories","industryIdentifiers","identifier","language","pageCount","tip","Button","href","canonicalVolumeLink","color","BookCard","Card","CardImg","top","CardBody","CardTitle","CardText","Home","books","result","setResult","zIndex","fontWeight","onSubmit","e","preventDefault","toast","items","onChange","target","value","type","placeholder","autoComplete","position","map","key","Error","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.46770d6e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no-image-icon-23500.57da1720.jpg\";","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { GiBookshelf} from \"react-icons/gi\";\r\n\r\nexport default class Navbar extends Component{\r\n    render(){\r\n        return(\r\n            <nav className=\"navbar navbar-dark bg-dark\">\r\n            <Link to=\"/\">\r\n            <GiBookshelf className=\"navbar-brand\" style={{fontSize:'40px'}} />\r\n              <h1 className=\"navbar-brand\">Librarian</h1>\r\n            </Link>\r\n            </nav>\r\n        )\r\n    }\r\n}","import React, { useEffect, useState} from 'react';\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Moment from \"react-moment\";\r\nimport DefaultImage from '../image/no-image-icon-23500.jpg';\r\nimport Navbar from '../components/Navbar';\r\nimport {RiArrowGoBackLine} from 'react-icons/ri';\r\nimport {Spinner} from 'reactstrap';\r\nimport {Button} from 'reactstrap';\r\n\r\n\r\nconst Books = (props) => {\r\n    const [book, setBook] = useState({});\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://www.googleapis.com/books/v1/volumes/${\r\n            props.match.params.id}?projection=full`)\r\n        .then(data => {\r\n            console.log(data.data);\r\n            setBook(data.data);\r\n            \r\n    })\r\n    .catch(err => console.error(err))\r\n}, [props.match.params.id])\r\n\r\nif(\r\n    book === undefined ||\r\n    book.length ===0\r\n   ){\r\n     return(\r\n     <div className='d-flex justify-content-center  mt-3'>\r\n     <Spinner style={{ width: '60px', height: '60px' }} />\r\n     </div>)\r\n   }else {\r\n    return(\r\n    <>\r\n    <Navbar />\r\n    <div className=\"wrapper\">\r\n        <div className=\"container-fluid\">\r\n        <header><h1>{book.volumeInfo.title}</h1></header>\r\n        <div className=\"sidebar\" style={{width:'260px',padding:'20px',float:'left'}}>\r\n        <img src={book.volumeInfo.imageLinks === undefined ?  `${DefaultImage}` : `${book.volumeInfo.imageLinks.thumbnail}`} alt=\"\" />\r\n        <p>Pubblicato da: <br/>\r\n        <span>{book.volumeInfo.publisher}</span></p>\r\n        <p>Autore: <br/>\r\n        {book.volumeInfo.authors === undefined ? `Sconosciuto`: `${book.volumeInfo.authors}`  }</p>\r\n        <p>\r\n        Data di Pubblicazione: <br/>\r\n        <Moment locale='it' format='l'>\r\n        {book.volumeInfo.publishedDate === undefined ? `Sconosciuto`: `${book.volumeInfo.publishedDate}`}\r\n        </Moment >\r\n        </p>\r\n        </div>\r\n        <div className=\"container\">\r\n        <h3>Trama</h3>\r\n        <hr/>\r\n        <p>{book.volumeInfo.description === undefined ? 'Trama non presente' : `${book.volumeInfo.description}`}  </p>\r\n        <hr/>\r\n        <h3>Maggiori Info:</h3>\r\n        <p>Categoria: {book.volumeInfo.categories === undefined ? 'Non presente' : `${book.volumeInfo.categories}`}</p>\r\n        <p>ISBIN: {book.volumeInfo.industryIdentifiers[1].identifier}</p>\r\n        <p>Lingua: {book.volumeInfo.language}</p>\r\n        <p>N. di pagine: {book.volumeInfo.pageCount}</p>\r\n        <footer><Link to=\"/librarian\">\r\n        <RiArrowGoBackLine tip=\"Torna indietro\" style={{fontSize:\"40px\"}}/>\r\n        </Link>\r\n        <Button className=\"secondary\">\r\n            <a href={book.volumeInfo.canonicalVolumeLink === undefined ? `Non esiste ebook` : `${book.volumeInfo.canonicalVolumeLink}`} style={{color:'#fff'}}>Ebook</a>\r\n        </Button> \r\n        </footer>\r\n        </div>\r\n        </div>\r\n    </div>\r\n    </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Books;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { Card, CardTitle, CardImg, CardText, CardBody } from 'reactstrap';\r\nimport Moment from \"react-moment\";\r\nimport DefaultImage from '../image/no-image-icon-23500.jpg'\r\n\r\nconst BookCard = (props) => {\r\n    const { book } = props;\r\n    return(\r\n\r\n    <section>\r\n    <Card style={{width: '300px'}} className=\"m-auto\">\r\n            <CardImg top style={{width: '300px', height: '300px'}} src={book.volumeInfo.imageLinks === undefined ? `${DefaultImage}`: `${book.volumeInfo.imageLinks.thumbnail}`} alt=\"\"/>\r\n            <CardBody>\r\n        <CardTitle className=\"card-title\">{book.volumeInfo.title}</CardTitle>\r\n            <CardText>\r\n                Autore: {book.volumeInfo.authors === undefined ? `Sconosciuto`: `${book.volumeInfo.authors}`}\r\n                <br/>\r\n                Pubblicato:\r\n                <Moment format=\"DD/MM/YYYY\">\r\n                {book.volumeInfo.publishedDate === undefined ? `Sconosciuto`: `${book.volumeInfo.publishedDate}`}\r\n                </Moment>\r\n                \r\n            </CardText>\r\n            <Link to={`books/${book.id}`} className='btn btn-info btn-block'>\r\n              Info\r\n            </Link>\r\n            </CardBody>\r\n     </Card>\r\n    </section>\r\n    )\r\n    }\r\n\r\nexport default BookCard;","import React, {useState, Fragment} from 'react';\r\nimport axios from 'axios';\r\nimport BookCard from '../components/BookCard';\r\nimport { GiBookshelf} from \"react-icons/gi\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { GrReactjs } from \"react-icons/gr\";\r\n\r\n\r\nconst Home = () => {\r\n  const [books,setBook] = useState(\"\");\r\n  const [result, setResult] = useState([]);\r\n  \r\n  function handleChange(e) {\r\n    const books = e.target.value;\r\n    setBook(books);\r\n}\r\n\r\nfunction handleSubmit(e){\r\n    e.preventDefault();\r\n    if(books.length === 0){\r\n      toast.error('Scrivi il nome del libro che cerchi')\r\n    }else{\r\n    axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\"+books+\"&maxResults=20\")\r\n    .then(data => {\r\n        console.log(data.data.items);\r\n        setResult(data.data.items);\r\n    })}\r\n}\r\n\r\n  return(\r\n    <Fragment>\r\n    <div className=\"main-image d-flex justify-content-center align-items-center flex-column\">\r\n    {/*Overlay*/}\r\n    <div className='filter'></div>\r\n    <GiBookshelf style={{color:'#fff', zIndex:2, fontSize: '85px'}}/>\r\n    <h1 className=\"display-3 text-white mb-2\" style={{fontWeight: 600, zIndex: 2}}>Librarian</h1>\r\n    <h2 className=\"display-2 text-center text-white mb-3\" style={{zIndex: 2}}>\r\n    La tua libreria online.\r\n    </h2>\r\n    <form onSubmit={handleSubmit} style={{zIndex: 2, width: \"60%\"}} className=\"input-group mb-2\">\r\n      <input onChange={handleChange} type=\"text\" className=\"form-control\" placeholder=\"Ricerca il tuo libro...\" autoComplete=\"true\" />\r\n      <button type=\"submit\" className=\"btn btn-danger btn-inline-secondary\">Cerca</button>\r\n      <ToastContainer position=\"top-center\"/>\r\n      </form>\r\n      </div>\r\n    <div className=\"jumbotron jumbotron-fluid\">\r\n    <div className=\"container\">\r\n    <p className=\"lead\">\"Chi non legge, a 70 anni avrà vissuto una sola vita: la propria. Chi legge avrà vissuto 5000 anni: c'era quando Caino uccise Abele, quando Renzo sposò Lucia, quando Leopardi ammirava l'infinito... perché la lettura è un'immortalità all'indietro.\"</p>\r\n    <h4>Umberto Eco</h4>\r\n    </div>\r\n    </div>\r\n  \r\n      <div className=\"recipes\">\r\n      {result.map(book => (\r\n          <BookCard \r\n          key={book.id}\r\n          book={book}\r\n          />\r\n      ))}\r\n    </div>\r\n    <footer className=\"page-footer font-small special-color-dark pt-4\">\r\n    <div className=\"footer-copyright text-center py-3\">\r\n    Design by Jury Griseri with <GrReactjs style={{fontSize:'25px'}}/>\r\n    </div>\r\n      </footer>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Button} from 'reactstrap';\r\n\r\nexport default function Error(){\r\n    return(\r\n        <div className=\"d-flex justify-content-center align-items-center flex-column\">\r\n            <h1 className=\"display-2 mb-2\">404</h1>\r\n            <p className=\"display-4 text-center  mb-3\">Pagina non trovata</p>\r\n            <Link to=\"/librarian\"> \r\n            <Button>\r\n            Torna indietro\r\n            </Button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}","import React, {Component} from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Books from './pages/Books';\nimport Home from './pages/Home';\nimport Error from './pages/Error';\nimport './App.css';\n\n\nclass App extends Component{\n  render(){\n  return (\n    <Router>\n        <>\n            <Switch>\n              <Route exact path=\"/librarian\" component={Home} />\n              <Route exact path=\"/librarian/books/:id\" component={Books} />\n              <Route component={Error} />\n            </Switch>\n        </>\n      </Router>\n  )\n  } \n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}